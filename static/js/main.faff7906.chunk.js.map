{"version":3,"sources":["components/Grid/Column.js","components/Grid/Container.js","components/Grid/Row.js","components/Thumbnail/ImgThumbnail.js","components/Thumbnail/ThumbnailContainer.js","components/Toast/Toast.js","components/Indicator/Indicator.js","components/Toast/GameLostToast.js","components/Toast/GameWonToast.js","components/Toast/index.js","utils.js","App.js","registerServiceWorker.js","lib/entities/image.js","lib/entities/game.js","lib/use-cases/new-game.js","lib/use-cases/index.js","index.js"],"names":["Column","_ref","size","children","style","react_default","a","createElement","className","split","map","el","concat","join","Container","props","Object","assign","Row","ImgThumbnail","label","alt","fileName","onClick","button","React","createRef","handleClick","current","blur","onKeyPress","role","tabIndex","aria-label","ref","src","ThumbnailContainer","imgThumbnails","images","image","key","react_flip_move_es","duration","delay","staggerDurationBy","staggerDelayBy","appearAnimation","Toast","_this$props","this","heading","body","show","indicator","ToastContainer","Component","styles","top","opacity","aria-live","aria-atomic","Indicator","color","xmlns","preserveAspectRatio","focusable","width","height","fill","red","GameLostToast","score","Toast_Toast","green","GameWonToast","getShuffledArray","arrayToShuffle","randomIndex","element","index","result","toConsumableArray","length","Math","floor","random","GAME_WON_TOAST","GAME_LOST_TOAST","App","game","_this","newGame","state","topScore","toast","isLocked","gameOver","isGameWon","showToast","then","reset","type","setState","Promise","resolve","setTimeout","points","max","shuffleImages","imgName","_this2","selectImage","isGameOver","_this3","name","handleImgThumbnailClick","transition","filter","maxWidth","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","makeImage","missingRequiredPropertyError","isClicked","freeze","click","propertyName","Error","makeGame","find","getImage","sliceAt","process","REACT_APP_IMAGE_SLICE_AT","imageData","slice","makeNewGame","ReactDOM","render","App_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.faff7906.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Column({ size, children, style }) {\n  return (\n    <div\n      className={size\n        .split(' ')\n        .map(el => `col-${el}`)\n        .join(' ')}\n      style={style}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Container(props) {\n  return (\n    <div {...props} className=\"container\">\n      {/* {children} */}\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Row({ children, className }) {\n  return (\n    <div className={className ? `row ${className}` : 'row'}>{children}</div>\n  )\n}\n","import React from 'react'\n\nexport default function ImgThumbnail(props) {\n  const { label, alt, fileName, onClick } = props\n  const button = React.createRef()\n  const handleClick = () => {\n    button.current.blur()\n    onClick()\n  }\n  return (\n    <span\n      onClick={handleClick}\n      onKeyPress={handleClick}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={label}\n      className=\"p-1 d-inline-block\"\n      ref={button}\n    >\n      <img alt={alt} src={`images/${fileName}`} className=\"img-thumbnail\" />\n    </span>\n  )\n}\n","import React from 'react'\nimport FlipMove from 'react-flip-move'\nimport ImgThumbnail from './ImgThumbnail'\n\nexport default function ThumbnailContainer({ images }) {\n  const imgThumbnails = images.map(image => (\n    <div key={image.label} className=\"d-inline-block\">\n      <ImgThumbnail {...image} />\n    </div>\n  ))\n  return (\n    <FlipMove\n      duration={400}\n      delay={50}\n      staggerDurationBy={40}\n      staggerDelayBy={10}\n      appearAnimation=\"fade\"\n    >\n      {imgThumbnails}\n    </FlipMove>\n  )\n}\n","import React from 'react'\nimport './toast.css'\n\nexport default class Toast extends React.Component {\n  render() {\n    const { heading, body, show, indicator } = this.props\n\n    return (\n      <ToastContainer show={show}>\n        <div className=\"toast-header\">\n          {indicator}\n          <strong className=\"mr-auto\">{heading}</strong>\n        </div>\n        <div className=\"toast-body\">{body}</div>\n      </ToastContainer>\n    )\n  }\n}\n\nfunction ToastContainer({ show, children }) {\n  const styles = {\n    top: show ? 0 : '-100px',\n    opacity: show ? 1 : 0\n  }\n\n  return (\n    <div\n      className=\"toast mt-3 mr-3\"\n      role=\"alert\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      style={styles}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Indicator({color}) {\n  return (\n    <svg\n      className=\"rounded mr-2\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMidYMid slice\"\n      focusable=\"false\"\n      role=\"img\"\n      width=\"15\"\n      height=\"15\"\n    >\n      <rect fill={color} width=\"100%\" height=\"100%\" />\n    </svg>\n  )\n}\n","import React from 'react'\nimport Toast from './Toast'\nimport { Indicator } from '../Indicator';\n\nconst red = '#dc3545'\n\nexport default function GameLostToast({ show, score }) {\n  const props = {\n    show,\n    heading: 'You lost',\n    body: `Final score: ${score}`,\n    indicator: <Indicator color={red} />\n  }\n  return <Toast {...props} />\n}\n","import React from 'react'\nimport Toast from './Toast'\nimport { Indicator } from '../Indicator';\n\nconst green = '#28a745'\n\nexport default function GameWonToast({ show }) {\n  const props = {\n    show,\n    heading: 'You win!',\n    body: 'All images selected once. Congratulations wizard!',\n    indicator: <Indicator color={green} />\n  }\n  return <Toast {...props} />\n}\n","import Toast from './Toast'\nexport default Toast\n\nexport { default as GameLostToast } from './GameLostToast'\nexport { default as GameWonToast } from './GameWonToast'\n","function getShuffledArray(arrayToShuffle) {\n  const result = [...arrayToShuffle];\n  let randomIndex;\n  let element;\n  let index;\n  for (index = result.length - 1; index > 0; index -= 1) {\n    randomIndex = Math.floor(Math.random() * (index + 1));\n    element = result[index];\n    result[index] = result[randomIndex];\n    result[randomIndex] = element;\n  }\n  return result;\n}\nexport default getShuffledArray;\n","import React, { Component } from 'react'\nimport { Container, Column, Row } from './components/Grid'\nimport { ThumbnailContainer } from './components/Thumbnail'\nimport { GameLostToast, GameWonToast } from './components/Toast'\nimport getShuffledArray from './utils'\n\nconst GAME_WON_TOAST = 'game-won'\nconst GAME_LOST_TOAST = 'game-lost'\n\nexport default class App extends Component {\n  game = this.props.newGame()\n\n  state = {\n    images: getShuffledArray(this.game.images()),\n    score: 0,\n    topScore: 0,\n    toast: null,\n    isLocked: false\n  }\n\n  handleImgThumbnailClick(imgName) {\n    if (this.state.isLocked) {\n      return\n    }\n    this.game.selectImage(imgName)\n    this.setState({ score: this.game.points() }, () => {\n      if (this.game.isGameOver()) {\n        this.gameOver(this.game.isGameWon())\n      } else {\n        this.shuffleImages()\n      }\n    })\n  }\n\n  gameOver = isGameWon =>\n    this.showToast(isGameWon ? GAME_WON_TOAST : GAME_LOST_TOAST).then(\n      this.reset\n    )\n\n  showToast = type => {\n    this.setState({ toast: type, isLocked: true })\n    return new Promise(resolve => {\n      setTimeout(resolve, 1500)\n    })\n  }\n\n  reset = () => {\n    const score = this.game.points()\n    this.game = this.props.newGame()\n    this.setState(({ topScore }) => ({\n      toast: null,\n      score: 0,\n      topScore: Math.max(score, topScore),\n      isLocked: false\n    }))\n    this.shuffleImages()\n  }\n\n  shuffleImages = () =>\n    this.setState({ images: getShuffledArray(this.game.images()) })\n\n  render() {\n    const images = this.state.images.map(image => ({\n      label: image.name(),\n      alt: image.alt(),\n      fileName: image.src(),\n      onClick: () => this.handleImgThumbnailClick(image.name())\n    }))\n\n    const style = {\n      transition: 'all 600ms',\n      filter: this.state.isLocked ? 'blur(2px)' : 'none',\n      opacity: this.state.isLocked ? '0.8' : '1'\n    }\n\n    return (\n      <div>\n        <Container style={style}>\n          <h1>Magic Memory</h1>\n          <Row>\n            <Column size=\"md-8\">\n              <span className=\"pl-1 pr-2\">Score: {this.state.score}</span>\n              <span className=\"pl-2 border-left\">\n                Top Score: {this.state.topScore}\n              </span>\n            </Column>\n          </Row>\n          <div className=\"pt-3\">\n            <Row>\n              <Column size=\"12\" style={{ maxWidth: '500px' }}>\n                <ThumbnailContainer images={images} />\n              </Column>\n            </Row>\n          </div>\n        </Container>\n        <GameLostToast\n          show={this.state.toast === GAME_LOST_TOAST}\n          score={this.state.score}\n        />\n        <GameWonToast show={this.state.toast === GAME_WON_TOAST} />\n      </div>\n    )\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default function makeImage({ name, src, alt }) {\n  if (!name) {\n    throw missingRequiredPropertyError('name')\n  }\n  if (!src) {\n    throw missingRequiredPropertyError('src')\n  }\n  if (!alt) {\n    throw missingRequiredPropertyError('alt')\n  }\n\n  let isClicked = false\n\n  return Object.freeze({\n    name: () => name,\n    src: () => src,\n    alt: () => alt,\n    isClicked: () => isClicked,\n    click: () => {\n      isClicked = true\n    }\n  })\n}\n\nfunction missingRequiredPropertyError(propertyName) {\n  return new Error(`Must have '${propertyName}'.`)\n}\n","export default function makeGame({ images }) {\n  if (!images || !images.length) {\n    throw new Error('Must have at least 1 image.')\n  }\n  \n  let isGameOver = false\n  let points = 0\n\n  const getImage = name => images.find(image => image.name() === name)\n  const isGameWon = () => points === images.length\n\n  return Object.freeze({\n    selectImage: name => {\n      const image = getImage(name)\n      isGameOver = image.isClicked()\n      if (!isGameOver) {\n        points += 1\n      }\n      image.click()\n      isGameOver = isGameWon() || isGameOver\n    },\n    isGameOver: () => isGameOver,\n    isGameWon,\n    points: () => points,\n    images: () => images\n  })\n}\n","import { makeImage, makeGame } from '../entities'\n\n// uses a subset of images for development\nconst { REACT_APP_IMAGE_SLICE_AT: sliceAt } = process.env\n\nexport default function makeNewGame({ imageData }) {\n  console.log(sliceAt)\n  return function newGame() {\n    const images = sliceAt\n      ? imageData.slice(0, sliceAt).map(makeImage)\n      : imageData.map(makeImage)\n\n    return makeGame({ images })\n  }\n}\n","import imageData from '../../imageData.json'\nimport makeNewGame from './new-game'\n\nexport const newGame = makeNewGame({ imageData })\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { newGame } from './lib/use-cases'\n\nReactDOM.render(\n  <App newGame={newGame} />,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}